name: Build and Test
# todo install Ninja-dev
on:
  push:
    branches:
      - main
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  # Build the LLVM submodule then cache it. Do not rebuild if hit in the
  # cache.
  build-llvm:
    name: Build LLVM
    runs-on: ubuntu-latest
    steps:
      # Clone the dyn-dialect repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get Dyn-dialect
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: "true"

      # Extract the LLVM submodule hash for use in the cache key.
      - name: Get LLVM Hash
        id: get-llvm-hash
        run: echo "::set-output name=hash::$(git rev-parse @:./llvm-project)"
        shell: bash

      # Try to fetch LLVM from the cache.
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm-project
          key: ${{ runner.os }}-llvm-install-${{ steps.get-llvm-hash.outputs.hash }}

      # Build LLVM if we didn't hit in the cache.
      - name: Rebuild and Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: utils/build-llvm.sh


    # Installing the results into the cache is an action which is automatically
    # added by the cache action above.

  # --- end of build-llvm job.

  # Build Dyn-dialect and run its tests.
  build-circt:
    name: Build and Test
    needs: build-llvm
    runs-on: ubuntu-latest
    steps:
      - name: Configure Environment
        run: echo "$GITHUB_WORKSPACE/llvm-project/install/bin" >> $GITHUB_PATH

      # Clone the Dyn-dialect repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get Dyn-dialect
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: "true"

      # --------
      # Restore LLVM from cache and build if it's not in there.
      # --------

      # Extract the LLVM submodule hash for use in the cache key.
      - name: Get LLVM Hash
        id: get-llvm-hash
        run: echo "::set-output name=hash::$(git rev-parse @:./llvm-project)"
        shell: bash

      # Try to fetch LLVM from the cache.
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: llvm-project
          key: ${{ runner.os }}-llvm-install-${{ steps.get-llvm-hash.outputs.hash }}

      # Build LLVM if we didn't hit in the cache. Even though we build it in
      # the previous job, there is a low chance that it'll have been evicted by
      # the time we get here.
      - name: Rebuild and Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: utils/build-llvm.sh

      # --------
      # Build and test Dyn-dialect.
      # --------

      # Build the Dyn-dialect test target in debug mode to build and test.
      - name: Build and Test Dyn-dialect
        run: |
          utils/setup.sh && utils/build.sh 

  # --- end of buildjob.
